# 🎈 튜플(tuple) 자료형
# 튜플은 몇 가지 점을 제외하곤 리스트와 거의 비슷하며 리스트와 다른 점은 다음과 같다.
# 리스트는 []로 둘러싸지만 튜플은 ()로 둘러싼다.
# 리스트는 그 값의 생성, 삭제, 수정이 가능하지만 튜플은 그 값을 바꿀 수 없다.
# 즉, 튜플(변화 불가능)과 리스트(변화 가능)의 가장 큰 차이는 값을 변화시킬 수 있는가 여부이다.
# 프로그램이 실행되는 동안 그 값이 항상 변하지 않기를 바란다면 튜플, 수시로 그 값을 변화시켜야 할 경우엔 리스트를 사용
# 속도가 리스트보다 빠름

t1 = ()
t2 = (1, ) # 1개의 요소만을 가질 때는 요소 뒤에 콤마(,)를 반드시 붙여야 함
t3 = (1, 2, 3)
t4 = 1, 2, 3 # 괄호()를 생략해도 무방
t5 = ('a', 'b', ('ab', 'cd'))


# 🎈 인덱싱
# 문자열, 리스트와 마찬가지로 인덱싱이 가능하다.
t1 = (1, 2, 'a', 'b')
print(t1[0]) # 1
print(t1[3]) # 'b'


# 🎈 슬라이싱
print(t1[1:]) # (2, 'a', 'b')


# 🎈 튜플 더하기
t2 = (3, 4)
print(t1 + t2) # (1, 2, 'a', 'b', 3, 4)
# (1, 2, 3)이라는 튜플에 값 4 추가하기
t3 = (1, 2, 3)
t3 = t3 + (4, )
print(t3) # (1, 2, 3, 4)
# 이때 만들어지는 t3 + (4, )의 결과는 t3값이 변경되는 것이 아니라 (튜플은 값을 변경할 수 없음)
# 새로운 튜플이 생성되고 그 값이 t3 변수에 대입된다. 


# 🎈 튜플 곱하기(반복)
print(t2 * 3) # (3, 4, 3, 4, 3, 4)


# 🎈 튜플 길이 구하기
print(len(t1)) # 4
